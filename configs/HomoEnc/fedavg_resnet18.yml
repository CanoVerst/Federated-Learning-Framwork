clients:
    # Type
    type: simple

    # The total number of clients
    total_clients: 10

    # The number of clients selected in each round
    per_round: 2

    # Should the clients compute test accuracy locally?
    do_test: false

    # Whether client-server communication should be simulated with files
    comm_simulation: true

    outbound_processors:
        # Encrypt and serialize the model before sending to the server
        #- model_encrypt

    inbound_processors:
        # Deserialize and decrypt the model before local training
        #- model_decrypt

server:
    address: 127.0.0.1
    port: 8000
    random_seed: 1
    simulate_wall_time: true

    #type: fedavg_homo_enc
    # Processors for inbound data payloads
    inbound_processors:
        # Server needs to deserialize the payload to obtain encrypted data
        #- model_decrypt
      
    outbound_processors:
        # Encrypt and serialize the model before sending to the server

data:
    # The training and testing dataset
    datasource: CIFAR10

    # Number of samples in each partition
    partition_size: 1000

    # IID or non-IID?
    sampler: iid

trainer:
    # Using the differential privacy trainer
    type: basic 
    #dp_epsilon: 10
    #dp_delta: 0.00001
    #dp_max_grad_norm: 1 

    # The maximum number of training rounds
    rounds: 20

    # The maximum number of clients running concurrently
    max_concurrency: 7

    # The target accuracy
    target_accuracy: 0.80

    # Number of epoches for local training in each communication round
    epochs: 1
    batch_size: 32
    optimizer: SGD
    learning_rate: 0.01
    momentum: 0.9
    weight_decay: 0.0001

    # Learning rate schedule
    lr_schedule: LambdaLR
    lr_gamma: 0.1
    lr_milestone_steps: 80ep,120ep

    # The machine learning model
    model_name: resnet_18

algorithm:
    # Aggregation algorithm
    type: fedavg

results:
    # Write the following parameter(s) into a CSV
    types: round, elapsed_time, accuracy, comm_time, round_time, comm_overhead

    # Plot results (x_axis-y_axis)
    plot: round-accuracy, elapsed_time-accuracy
