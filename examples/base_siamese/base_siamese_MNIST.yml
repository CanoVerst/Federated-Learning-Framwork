clients:
    # Type
    type: simple

    # The total number of clients
    total_clients: 5

    # The number of clients selected in each round
    per_round: 1

    # Should the clients compute test accuracy locally?
    do_test: True

    # Whether simulate clients or not
    simulation: true

    random_seed: 1

server:
    address: 127.0.0.1
    port: 8000
    synchronous: true
    do_test: false

    checkpoint_path: models/base_siamese/mnist
    model_path: models/base_siamese/mnist

data:
    # The training and testing dataset
    datasource: MNIST

    # Number of samples in each partition
    partition_size: 600

    # IID or non-IID?
    sampler: noniid

    # The concentration parameter for the Dirichlet distribution
    concentration: 5

    # The random seed for sampling data
    random_seed: 1

    # set the data wrapper to further process the data
    #   for the specific usage, such as constrastive learning
    # data_wrapper: Null
    data_wrapper: ContrastiveWrapper

trainer:
    # The type of the trainer
    type: basic

    # The maximum number of training rounds
    rounds: 100

    # Whether the training should use multiple GPUs if available
    parallelized: false

    # The maximum number of clients running concurrently
    max_concurrency: 10

    # The target accuracy
    target_accuracy: 0.98

    # Number of epochs for local training in each communication round
    epochs: 10
    batch_size: 10
    optimizer: SGD
    learning_rate: 0.03
    momentum: 0.0 # learning rate is fixed as in Appendix C.2
    weight_decay: 0.0

    # margin
    margin: 2.0


    # The machine learning model
    model_name: lenet5

algorithm:
    # Aggregation algorithm
    type: fedavg
